openapi: "3.0.3"

info:
  title: Person Service
  version: v1

tags:
  - name: Person
    description: "Everything about your Persons"


paths:
  /persons:
    get:
      summary: Get all cars
      operationId: getAllPersons
      tags:
        - Persons
      responses:
        200:
          description: OK - Successfully return a list of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonResponse'
    post:
      summary: Create a new persons
      operationId: createPerson
      tags:
        - Persons
      requestBody:
        description: A JSON object containing person information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
      responses:
        200:
          description: Created a new Car
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
  /persons/{personId}:
    put:
      summary: Update a persons by id
      operationId: updatePersonById
      tags:
        - Persons
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: A JSON object containing person information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        404:
          description: Not found
    get:
      summary: Get a ersons
      operationId: getPersonById
      tags:
        - Persons
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonResponse'
        404:
          description: Not found
    delete:
      summary: delete an existing person
      operationId: deletePersonById
      tags:
        - Persons
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: No Content
        404:
          description: Not found

components:
  schemas:
    PersonRequest:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
        carId:
          type: integer
          format: int64
    PersonResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        age:
          type: integer
        car:
          type: object
          $ref: '#/components/schemas/Car'
    Car:
      type: object
      properties:
        id:
          type: integer
          format: int64
        licensePlate:
          type: string
        company:
          type: string
        model:
          type: string
